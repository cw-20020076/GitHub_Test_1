/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <gui/screen2_screen/Screen2View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>
#include <gui/screen3_screen/Screen3View.hpp>
#include <gui/screen3_screen/Screen3Presenter.hpp>
#include <gui/screen4_screen/Screen4View.hpp>
#include <gui/screen4_screen/Screen4Presenter.hpp>
#include <gui/screen5_1_screen/Screen5_1View.hpp>
#include <gui/screen5_1_screen/Screen5_1Presenter.hpp>
#include <gui/screen5_2_screen/Screen5_2View.hpp>
#include <gui/screen5_2_screen/Screen5_2Presenter.hpp>
#include <gui/screen6_screen/Screen6View.hpp>
#include <gui/screen6_screen/Screen6Presenter.hpp>
#include <gui/screen7_screen/Screen7View.hpp>
#include <gui/screen7_screen/Screen7Presenter.hpp>
#include <gui/screen8_screen/Screen8View.hpp>
#include <gui/screen8_screen/Screen8Presenter.hpp>
#include <gui/screen9_screen/Screen9View.hpp>
#include <gui/screen9_screen/Screen9Presenter.hpp>
#include <gui/screen10_screen/Screen10View.hpp>
#include <gui/screen10_screen/Screen10Presenter.hpp>
#include <gui/screen11_screen/Screen11View.hpp>
#include <gui/screen11_screen/Screen11Presenter.hpp>
#include <gui/screen12_screen/Screen12View.hpp>
#include <gui/screen12_screen/Screen12Presenter.hpp>
#include <gui/screen13_screen/Screen13View.hpp>
#include <gui/screen13_screen/Screen13Presenter.hpp>
#include <gui/screen14_screen/Screen14View.hpp>
#include <gui/screen14_screen/Screen14Presenter.hpp>
#include <gui/screen15_screen/Screen15View.hpp>
#include <gui/screen15_screen/Screen15Presenter.hpp>
#include <gui/screen16_screen/Screen16View.hpp>
#include <gui/screen16_screen/Screen16Presenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< Screen1View,
            touchgfx::meta::TypeList< Screen2View,
            touchgfx::meta::TypeList< Screen3View,
            touchgfx::meta::TypeList< Screen4View,
            touchgfx::meta::TypeList< Screen5_1View,
            touchgfx::meta::TypeList< Screen5_2View,
            touchgfx::meta::TypeList< Screen6View,
            touchgfx::meta::TypeList< Screen7View,
            touchgfx::meta::TypeList< Screen8View,
            touchgfx::meta::TypeList< Screen9View,
            touchgfx::meta::TypeList< Screen10View,
            touchgfx::meta::TypeList< Screen11View,
            touchgfx::meta::TypeList< Screen12View,
            touchgfx::meta::TypeList< Screen13View,
            touchgfx::meta::TypeList< Screen14View,
            touchgfx::meta::TypeList< Screen15View,
            touchgfx::meta::TypeList< Screen16View,
            touchgfx::meta::Nil > > > > > > > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< Screen1Presenter,
            touchgfx::meta::TypeList< Screen2Presenter,
            touchgfx::meta::TypeList< Screen3Presenter,
            touchgfx::meta::TypeList< Screen4Presenter,
            touchgfx::meta::TypeList< Screen5_1Presenter,
            touchgfx::meta::TypeList< Screen5_2Presenter,
            touchgfx::meta::TypeList< Screen6Presenter,
            touchgfx::meta::TypeList< Screen7Presenter,
            touchgfx::meta::TypeList< Screen8Presenter,
            touchgfx::meta::TypeList< Screen9Presenter,
            touchgfx::meta::TypeList< Screen10Presenter,
            touchgfx::meta::TypeList< Screen11Presenter,
            touchgfx::meta::TypeList< Screen12Presenter,
            touchgfx::meta::TypeList< Screen13Presenter,
            touchgfx::meta::TypeList< Screen14Presenter,
            touchgfx::meta::TypeList< Screen15Presenter,
            touchgfx::meta::TypeList< Screen16Presenter,
            touchgfx::meta::Nil > > > > > > > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::Nil
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
